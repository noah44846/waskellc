curry :: ((a, b) -> c) -> a -> b -> c;
curry f x y = f (x, y);

uncurry :: (a -> b -> c) -> (a, b) -> c;
uncurry f (x, y) = f x y;

fst :: (a, b) -> a;
fst (x, _) = x;

snd :: (a, b) -> b;
snd (_, y) = y;

a :: Int -> Int -> (Int, Int);
a x y = (x, y);

-- example of usage of all the above functions
main :: Int;
--main = uncurry (+) ((,) (curry fst 1 2) (curry snd () 4));
main = uncurry (+) ((,) (curry fst 1 2) 3);
